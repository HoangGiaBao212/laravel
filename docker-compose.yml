version: "3.9"
name: laravel
services:
  database:
    container_name: laravel-database
    image: mysql:8.0.32-debian
    user:
      "1000:1000"
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: laravel
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin123
    logging:
      driver: none
    networks:
      - laravel-network
  phpmyadmin:
    container_name: laravel-phpmyadmin
    image: phpmyadmin:5.2.1-apache
    environment:
      PMA_HOST: database
      PMA_USER: admin
      PMA_PASSWORD: admin123
    links:
      - database
    logging:
      driver: none
    networks:
      - laravel-network
  backend:
    build:
      context: ./docker
      dockerfile: backend.Dockerfile
    container_name: laravel-backend
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
      - ./backend/logs:/var/www/logs
    command: php -S 0.0.0.0:80 -t public
    links:
      - database
    environment:
      MYSQL_HOST: database
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin123
      MYSQL_DATABASE: laravel
    networks:
      - laravel-network
  artisan:
    container_name: laravel-artisan
    build:
      context: ./docker
      dockerfile: backend.Dockerfile
    volumes:
      - ./backend:/var/www
    working_dir: /var/www
    entrypoint: ["/var/www/artisan"]
    networks:
      - laravel-network
  composer:
    container_name: laravel-composer
    image: composer:2.5.4
    volumes:
      - ./backend:/var/www
    working_dir: /var/www
    user: "1000:1000"
    entrypoint: ["/usr/bin/composer"]
    networks:
      - laravel-network
  nginx:
    container_name: laravel-nginx
    image: nginx:1.23.3
    ports:
      - 80:80
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    links:
      - backend
      - phpmyadmin
    networks:
      - laravel-network
networks:
  laravel-network:
    driver: bridge
