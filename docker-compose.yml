version: "3.9"
name: laravel
services:
  database:
    container_name: laravel-database
    image: mysql:8.0.32-debian
    environment:
      MYSQL_ROOT_PASSWORD: admin1234
      MYSQL_DATABASE: laravel
      MYSQL_USER: root
      MYSQL_PASSWORD: admin1234
    volumes:
      - ./database:/var/lib/mysql
    logging:
      driver: none
    networks:
      - laravel-network
  phpmyadmin:
    container_name: laravel-phpmyadmin
    image: phpmyadmin:5.2.1-apache
    environment:
      PMA_HOST: your_database_host
      PMA_USER: your_database_user
      PMA_PASSWORD: your_database_password
    links:
      - database
    logging:
      driver: none
    ports:
      - "8080:80"
    networks:
      - laravel-network
  artisan:
    container_name: laravel-artisan
    build:
      context: ./docker
      dockerfile: backend.Dockerfile
    volumes:
      - ./backend:/var/www/html
    working_dir: /var/www/html
    entrypoint: ["/usr/local/bin/php", "artisan"]
    networks:
      - laravel-network
  composer:
    container_name: laravel-composer
    image: composer:2.5.4
    volumes:
      - ./backend:/var/www
    working_dir: /var/www
    user: "1000:1000"
    entrypoint: ["/usr/bin/composer"]
    networks:
      - laravel-network
    command: install
  frontend:
    container_name: laravel-frontend
    build:
      context: ./docker
      dockerfile: frontend.Dockerfile
    volumes:
      - ./frontend:/var/www/html
    working_dir: /var/www/html
    command: php artisan serve --host=0.0.0.0 --port=80
    environment:
      - APP_NAME=laravel
      - APP_ENV=local
      - APP_KEY=
      - APP_DEBUG=true
      - APP_URL=http://localhost
      - LOG_CHANNEL=stack
      - DB_CONNECTION=mysql
      - DB_HOST=database
      - DB_PORT=3306
      - DB_DATABASE=laravel
      - DB_USERNAME=laravel
      - DB_PASSWORD=secret
    depends_on:
      - database
    ports:
      - 80:80
    networks:
      - laravel-network

  npm:
    container_name: laravel-npm
    build:
      context: ./docker
      dockerfile: frontend.Dockerfile
    volumes:
      - ./frontend:/app
    working_dir: /app
    entrypoint: ["/usr/local/bin/yarn"]
    networks:
      - laravel-network
  backend:
    container_name: laravel-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/var/www/html
    ports:
      - 8000:80
    networks:
      - laravel-network
  nginx:
    container_name: laravel-nginx
    image: nginx:1.23.3
    ports:
      - 80:80
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./frontend/build:/usr/share/nginx/html:ro
      - ./backend:/var/www/html:ro
    links:
      - backend
    networks:
      - laravel-network
networks:
  laravel-network:
    driver: bridge




